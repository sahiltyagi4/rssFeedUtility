/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.feedutil.schema;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This is the schema of the rss feed objects ingested and dumped into kafka */
@org.apache.avro.specific.AvroGenerated
public class FeedData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2828743879471551944L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FeedData\",\"namespace\":\"com.zifferlabs.schema\",\"doc\":\"This is the schema of the rss feed objects ingested and dumped into kafka\",\"fields\":[{\"name\":\"RSSFeed\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ArticleLink\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Language\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Author\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PublishedDate\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"UpdatedDate\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"LinkHref\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"LinkTitle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ContentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ContentValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Categories\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Thumbnail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Summary\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String RSSFeed;
  @Deprecated public java.lang.String Title;
  @Deprecated public java.lang.String ArticleLink;
  @Deprecated public java.lang.String Language;
  @Deprecated public java.lang.String Description;
  @Deprecated public java.lang.String Author;
  @Deprecated public java.lang.Long PublishedDate;
  @Deprecated public java.lang.Long UpdatedDate;
  @Deprecated public java.lang.String LinkHref;
  @Deprecated public java.lang.String LinkTitle;
  @Deprecated public java.lang.String ContentType;
  @Deprecated public java.lang.String ContentValue;
  @Deprecated public java.lang.String Categories;
  @Deprecated public java.lang.String Thumbnail;
  @Deprecated public java.lang.String Summary;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FeedData() {}

  /**
   * All-args constructor.
   * @param RSSFeed The new value for RSSFeed
   * @param Title The new value for Title
   * @param ArticleLink The new value for ArticleLink
   * @param Language The new value for Language
   * @param Description The new value for Description
   * @param Author The new value for Author
   * @param PublishedDate The new value for PublishedDate
   * @param UpdatedDate The new value for UpdatedDate
   * @param LinkHref The new value for LinkHref
   * @param LinkTitle The new value for LinkTitle
   * @param ContentType The new value for ContentType
   * @param ContentValue The new value for ContentValue
   * @param Categories The new value for Categories
   * @param Thumbnail The new value for Thumbnail
   * @param Summary The new value for Summary
   */
  public FeedData(java.lang.String RSSFeed, java.lang.String Title, java.lang.String ArticleLink, java.lang.String Language, java.lang.String Description, java.lang.String Author, java.lang.Long PublishedDate, java.lang.Long UpdatedDate, java.lang.String LinkHref, java.lang.String LinkTitle, java.lang.String ContentType, java.lang.String ContentValue, java.lang.String Categories, java.lang.String Thumbnail, java.lang.String Summary) {
    this.RSSFeed = RSSFeed;
    this.Title = Title;
    this.ArticleLink = ArticleLink;
    this.Language = Language;
    this.Description = Description;
    this.Author = Author;
    this.PublishedDate = PublishedDate;
    this.UpdatedDate = UpdatedDate;
    this.LinkHref = LinkHref;
    this.LinkTitle = LinkTitle;
    this.ContentType = ContentType;
    this.ContentValue = ContentValue;
    this.Categories = Categories;
    this.Thumbnail = Thumbnail;
    this.Summary = Summary;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return RSSFeed;
    case 1: return Title;
    case 2: return ArticleLink;
    case 3: return Language;
    case 4: return Description;
    case 5: return Author;
    case 6: return PublishedDate;
    case 7: return UpdatedDate;
    case 8: return LinkHref;
    case 9: return LinkTitle;
    case 10: return ContentType;
    case 11: return ContentValue;
    case 12: return Categories;
    case 13: return Thumbnail;
    case 14: return Summary;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: RSSFeed = (java.lang.String)value$; break;
    case 1: Title = (java.lang.String)value$; break;
    case 2: ArticleLink = (java.lang.String)value$; break;
    case 3: Language = (java.lang.String)value$; break;
    case 4: Description = (java.lang.String)value$; break;
    case 5: Author = (java.lang.String)value$; break;
    case 6: PublishedDate = (java.lang.Long)value$; break;
    case 7: UpdatedDate = (java.lang.Long)value$; break;
    case 8: LinkHref = (java.lang.String)value$; break;
    case 9: LinkTitle = (java.lang.String)value$; break;
    case 10: ContentType = (java.lang.String)value$; break;
    case 11: ContentValue = (java.lang.String)value$; break;
    case 12: Categories = (java.lang.String)value$; break;
    case 13: Thumbnail = (java.lang.String)value$; break;
    case 14: Summary = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'RSSFeed' field.
   * @return The value of the 'RSSFeed' field.
   */
  public java.lang.String getRSSFeed() {
    return RSSFeed;
  }

  /**
   * Sets the value of the 'RSSFeed' field.
   * @param value the value to set.
   */
  public void setRSSFeed(java.lang.String value) {
    this.RSSFeed = value;
  }

  /**
   * Gets the value of the 'Title' field.
   * @return The value of the 'Title' field.
   */
  public java.lang.String getTitle() {
    return Title;
  }

  /**
   * Sets the value of the 'Title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.Title = value;
  }

  /**
   * Gets the value of the 'ArticleLink' field.
   * @return The value of the 'ArticleLink' field.
   */
  public java.lang.String getArticleLink() {
    return ArticleLink;
  }

  /**
   * Sets the value of the 'ArticleLink' field.
   * @param value the value to set.
   */
  public void setArticleLink(java.lang.String value) {
    this.ArticleLink = value;
  }

  /**
   * Gets the value of the 'Language' field.
   * @return The value of the 'Language' field.
   */
  public java.lang.String getLanguage() {
    return Language;
  }

  /**
   * Sets the value of the 'Language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.String value) {
    this.Language = value;
  }

  /**
   * Gets the value of the 'Description' field.
   * @return The value of the 'Description' field.
   */
  public java.lang.String getDescription() {
    return Description;
  }

  /**
   * Sets the value of the 'Description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.Description = value;
  }

  /**
   * Gets the value of the 'Author' field.
   * @return The value of the 'Author' field.
   */
  public java.lang.String getAuthor() {
    return Author;
  }

  /**
   * Sets the value of the 'Author' field.
   * @param value the value to set.
   */
  public void setAuthor(java.lang.String value) {
    this.Author = value;
  }

  /**
   * Gets the value of the 'PublishedDate' field.
   * @return The value of the 'PublishedDate' field.
   */
  public java.lang.Long getPublishedDate() {
    return PublishedDate;
  }

  /**
   * Sets the value of the 'PublishedDate' field.
   * @param value the value to set.
   */
  public void setPublishedDate(java.lang.Long value) {
    this.PublishedDate = value;
  }

  /**
   * Gets the value of the 'UpdatedDate' field.
   * @return The value of the 'UpdatedDate' field.
   */
  public java.lang.Long getUpdatedDate() {
    return UpdatedDate;
  }

  /**
   * Sets the value of the 'UpdatedDate' field.
   * @param value the value to set.
   */
  public void setUpdatedDate(java.lang.Long value) {
    this.UpdatedDate = value;
  }

  /**
   * Gets the value of the 'LinkHref' field.
   * @return The value of the 'LinkHref' field.
   */
  public java.lang.String getLinkHref() {
    return LinkHref;
  }

  /**
   * Sets the value of the 'LinkHref' field.
   * @param value the value to set.
   */
  public void setLinkHref(java.lang.String value) {
    this.LinkHref = value;
  }

  /**
   * Gets the value of the 'LinkTitle' field.
   * @return The value of the 'LinkTitle' field.
   */
  public java.lang.String getLinkTitle() {
    return LinkTitle;
  }

  /**
   * Sets the value of the 'LinkTitle' field.
   * @param value the value to set.
   */
  public void setLinkTitle(java.lang.String value) {
    this.LinkTitle = value;
  }

  /**
   * Gets the value of the 'ContentType' field.
   * @return The value of the 'ContentType' field.
   */
  public java.lang.String getContentType() {
    return ContentType;
  }

  /**
   * Sets the value of the 'ContentType' field.
   * @param value the value to set.
   */
  public void setContentType(java.lang.String value) {
    this.ContentType = value;
  }

  /**
   * Gets the value of the 'ContentValue' field.
   * @return The value of the 'ContentValue' field.
   */
  public java.lang.String getContentValue() {
    return ContentValue;
  }

  /**
   * Sets the value of the 'ContentValue' field.
   * @param value the value to set.
   */
  public void setContentValue(java.lang.String value) {
    this.ContentValue = value;
  }

  /**
   * Gets the value of the 'Categories' field.
   * @return The value of the 'Categories' field.
   */
  public java.lang.String getCategories() {
    return Categories;
  }

  /**
   * Sets the value of the 'Categories' field.
   * @param value the value to set.
   */
  public void setCategories(java.lang.String value) {
    this.Categories = value;
  }

  /**
   * Gets the value of the 'Thumbnail' field.
   * @return The value of the 'Thumbnail' field.
   */
  public java.lang.String getThumbnail() {
    return Thumbnail;
  }

  /**
   * Sets the value of the 'Thumbnail' field.
   * @param value the value to set.
   */
  public void setThumbnail(java.lang.String value) {
    this.Thumbnail = value;
  }

  /**
   * Gets the value of the 'Summary' field.
   * @return The value of the 'Summary' field.
   */
  public java.lang.String getSummary() {
    return Summary;
  }

  /**
   * Sets the value of the 'Summary' field.
   * @param value the value to set.
   */
  public void setSummary(java.lang.String value) {
    this.Summary = value;
  }

  /**
   * Creates a new FeedData RecordBuilder.
   * @return A new FeedData RecordBuilder
   */
  public static com.feedutil.schema.FeedData.Builder newBuilder() {
    return new com.feedutil.schema.FeedData.Builder();
  }

  /**
   * Creates a new FeedData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FeedData RecordBuilder
   */
  public static com.feedutil.schema.FeedData.Builder newBuilder(com.feedutil.schema.FeedData.Builder other) {
    return new com.feedutil.schema.FeedData.Builder(other);
  }

  /**
   * Creates a new FeedData RecordBuilder by copying an existing FeedData instance.
   * @param other The existing instance to copy.
   * @return A new FeedData RecordBuilder
   */
  public static com.feedutil.schema.FeedData.Builder newBuilder(com.feedutil.schema.FeedData other) {
    return new com.feedutil.schema.FeedData.Builder(other);
  }

  /**
   * RecordBuilder for FeedData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FeedData>
    implements org.apache.avro.data.RecordBuilder<FeedData> {

    private java.lang.String RSSFeed;
    private java.lang.String Title;
    private java.lang.String ArticleLink;
    private java.lang.String Language;
    private java.lang.String Description;
    private java.lang.String Author;
    private java.lang.Long PublishedDate;
    private java.lang.Long UpdatedDate;
    private java.lang.String LinkHref;
    private java.lang.String LinkTitle;
    private java.lang.String ContentType;
    private java.lang.String ContentValue;
    private java.lang.String Categories;
    private java.lang.String Thumbnail;
    private java.lang.String Summary;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.feedutil.schema.FeedData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.RSSFeed)) {
        this.RSSFeed = data().deepCopy(fields()[0].schema(), other.RSSFeed);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Title)) {
        this.Title = data().deepCopy(fields()[1].schema(), other.Title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ArticleLink)) {
        this.ArticleLink = data().deepCopy(fields()[2].schema(), other.ArticleLink);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Language)) {
        this.Language = data().deepCopy(fields()[3].schema(), other.Language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Description)) {
        this.Description = data().deepCopy(fields()[4].schema(), other.Description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Author)) {
        this.Author = data().deepCopy(fields()[5].schema(), other.Author);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PublishedDate)) {
        this.PublishedDate = data().deepCopy(fields()[6].schema(), other.PublishedDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.UpdatedDate)) {
        this.UpdatedDate = data().deepCopy(fields()[7].schema(), other.UpdatedDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LinkHref)) {
        this.LinkHref = data().deepCopy(fields()[8].schema(), other.LinkHref);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LinkTitle)) {
        this.LinkTitle = data().deepCopy(fields()[9].schema(), other.LinkTitle);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ContentType)) {
        this.ContentType = data().deepCopy(fields()[10].schema(), other.ContentType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ContentValue)) {
        this.ContentValue = data().deepCopy(fields()[11].schema(), other.ContentValue);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Categories)) {
        this.Categories = data().deepCopy(fields()[12].schema(), other.Categories);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Thumbnail)) {
        this.Thumbnail = data().deepCopy(fields()[13].schema(), other.Thumbnail);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Summary)) {
        this.Summary = data().deepCopy(fields()[14].schema(), other.Summary);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FeedData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.feedutil.schema.FeedData other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.RSSFeed)) {
        this.RSSFeed = data().deepCopy(fields()[0].schema(), other.RSSFeed);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Title)) {
        this.Title = data().deepCopy(fields()[1].schema(), other.Title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ArticleLink)) {
        this.ArticleLink = data().deepCopy(fields()[2].schema(), other.ArticleLink);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Language)) {
        this.Language = data().deepCopy(fields()[3].schema(), other.Language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Description)) {
        this.Description = data().deepCopy(fields()[4].schema(), other.Description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Author)) {
        this.Author = data().deepCopy(fields()[5].schema(), other.Author);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PublishedDate)) {
        this.PublishedDate = data().deepCopy(fields()[6].schema(), other.PublishedDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.UpdatedDate)) {
        this.UpdatedDate = data().deepCopy(fields()[7].schema(), other.UpdatedDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LinkHref)) {
        this.LinkHref = data().deepCopy(fields()[8].schema(), other.LinkHref);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LinkTitle)) {
        this.LinkTitle = data().deepCopy(fields()[9].schema(), other.LinkTitle);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ContentType)) {
        this.ContentType = data().deepCopy(fields()[10].schema(), other.ContentType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ContentValue)) {
        this.ContentValue = data().deepCopy(fields()[11].schema(), other.ContentValue);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Categories)) {
        this.Categories = data().deepCopy(fields()[12].schema(), other.Categories);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Thumbnail)) {
        this.Thumbnail = data().deepCopy(fields()[13].schema(), other.Thumbnail);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Summary)) {
        this.Summary = data().deepCopy(fields()[14].schema(), other.Summary);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'RSSFeed' field.
      * @return The value.
      */
    public java.lang.String getRSSFeed() {
      return RSSFeed;
    }

    /**
      * Sets the value of the 'RSSFeed' field.
      * @param value The value of 'RSSFeed'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setRSSFeed(java.lang.String value) {
      validate(fields()[0], value);
      this.RSSFeed = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'RSSFeed' field has been set.
      * @return True if the 'RSSFeed' field has been set, false otherwise.
      */
    public boolean hasRSSFeed() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'RSSFeed' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearRSSFeed() {
      RSSFeed = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return Title;
    }

    /**
      * Sets the value of the 'Title' field.
      * @param value The value of 'Title'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.Title = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Title' field has been set.
      * @return True if the 'Title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Title' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearTitle() {
      Title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ArticleLink' field.
      * @return The value.
      */
    public java.lang.String getArticleLink() {
      return ArticleLink;
    }

    /**
      * Sets the value of the 'ArticleLink' field.
      * @param value The value of 'ArticleLink'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setArticleLink(java.lang.String value) {
      validate(fields()[2], value);
      this.ArticleLink = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ArticleLink' field has been set.
      * @return True if the 'ArticleLink' field has been set, false otherwise.
      */
    public boolean hasArticleLink() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ArticleLink' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearArticleLink() {
      ArticleLink = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Language' field.
      * @return The value.
      */
    public java.lang.String getLanguage() {
      return Language;
    }

    /**
      * Sets the value of the 'Language' field.
      * @param value The value of 'Language'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setLanguage(java.lang.String value) {
      validate(fields()[3], value);
      this.Language = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Language' field has been set.
      * @return True if the 'Language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Language' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearLanguage() {
      Language = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return Description;
    }

    /**
      * Sets the value of the 'Description' field.
      * @param value The value of 'Description'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setDescription(java.lang.String value) {
      validate(fields()[4], value);
      this.Description = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Description' field has been set.
      * @return True if the 'Description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Description' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearDescription() {
      Description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'Author' field.
      * @return The value.
      */
    public java.lang.String getAuthor() {
      return Author;
    }

    /**
      * Sets the value of the 'Author' field.
      * @param value The value of 'Author'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setAuthor(java.lang.String value) {
      validate(fields()[5], value);
      this.Author = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'Author' field has been set.
      * @return True if the 'Author' field has been set, false otherwise.
      */
    public boolean hasAuthor() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'Author' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearAuthor() {
      Author = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'PublishedDate' field.
      * @return The value.
      */
    public java.lang.Long getPublishedDate() {
      return PublishedDate;
    }

    /**
      * Sets the value of the 'PublishedDate' field.
      * @param value The value of 'PublishedDate'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setPublishedDate(java.lang.Long value) {
      validate(fields()[6], value);
      this.PublishedDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'PublishedDate' field has been set.
      * @return True if the 'PublishedDate' field has been set, false otherwise.
      */
    public boolean hasPublishedDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'PublishedDate' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearPublishedDate() {
      PublishedDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'UpdatedDate' field.
      * @return The value.
      */
    public java.lang.Long getUpdatedDate() {
      return UpdatedDate;
    }

    /**
      * Sets the value of the 'UpdatedDate' field.
      * @param value The value of 'UpdatedDate'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setUpdatedDate(java.lang.Long value) {
      validate(fields()[7], value);
      this.UpdatedDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'UpdatedDate' field has been set.
      * @return True if the 'UpdatedDate' field has been set, false otherwise.
      */
    public boolean hasUpdatedDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'UpdatedDate' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearUpdatedDate() {
      UpdatedDate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'LinkHref' field.
      * @return The value.
      */
    public java.lang.String getLinkHref() {
      return LinkHref;
    }

    /**
      * Sets the value of the 'LinkHref' field.
      * @param value The value of 'LinkHref'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setLinkHref(java.lang.String value) {
      validate(fields()[8], value);
      this.LinkHref = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'LinkHref' field has been set.
      * @return True if the 'LinkHref' field has been set, false otherwise.
      */
    public boolean hasLinkHref() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'LinkHref' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearLinkHref() {
      LinkHref = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'LinkTitle' field.
      * @return The value.
      */
    public java.lang.String getLinkTitle() {
      return LinkTitle;
    }

    /**
      * Sets the value of the 'LinkTitle' field.
      * @param value The value of 'LinkTitle'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setLinkTitle(java.lang.String value) {
      validate(fields()[9], value);
      this.LinkTitle = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'LinkTitle' field has been set.
      * @return True if the 'LinkTitle' field has been set, false otherwise.
      */
    public boolean hasLinkTitle() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'LinkTitle' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearLinkTitle() {
      LinkTitle = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ContentType' field.
      * @return The value.
      */
    public java.lang.String getContentType() {
      return ContentType;
    }

    /**
      * Sets the value of the 'ContentType' field.
      * @param value The value of 'ContentType'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setContentType(java.lang.String value) {
      validate(fields()[10], value);
      this.ContentType = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ContentType' field has been set.
      * @return True if the 'ContentType' field has been set, false otherwise.
      */
    public boolean hasContentType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ContentType' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearContentType() {
      ContentType = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ContentValue' field.
      * @return The value.
      */
    public java.lang.String getContentValue() {
      return ContentValue;
    }

    /**
      * Sets the value of the 'ContentValue' field.
      * @param value The value of 'ContentValue'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setContentValue(java.lang.String value) {
      validate(fields()[11], value);
      this.ContentValue = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ContentValue' field has been set.
      * @return True if the 'ContentValue' field has been set, false otherwise.
      */
    public boolean hasContentValue() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ContentValue' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearContentValue() {
      ContentValue = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'Categories' field.
      * @return The value.
      */
    public java.lang.String getCategories() {
      return Categories;
    }

    /**
      * Sets the value of the 'Categories' field.
      * @param value The value of 'Categories'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setCategories(java.lang.String value) {
      validate(fields()[12], value);
      this.Categories = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'Categories' field has been set.
      * @return True if the 'Categories' field has been set, false otherwise.
      */
    public boolean hasCategories() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'Categories' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearCategories() {
      Categories = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'Thumbnail' field.
      * @return The value.
      */
    public java.lang.String getThumbnail() {
      return Thumbnail;
    }

    /**
      * Sets the value of the 'Thumbnail' field.
      * @param value The value of 'Thumbnail'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setThumbnail(java.lang.String value) {
      validate(fields()[13], value);
      this.Thumbnail = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'Thumbnail' field has been set.
      * @return True if the 'Thumbnail' field has been set, false otherwise.
      */
    public boolean hasThumbnail() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'Thumbnail' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearThumbnail() {
      Thumbnail = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'Summary' field.
      * @return The value.
      */
    public java.lang.String getSummary() {
      return Summary;
    }

    /**
      * Sets the value of the 'Summary' field.
      * @param value The value of 'Summary'.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder setSummary(java.lang.String value) {
      validate(fields()[14], value);
      this.Summary = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'Summary' field has been set.
      * @return True if the 'Summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'Summary' field.
      * @return This builder.
      */
    public com.feedutil.schema.FeedData.Builder clearSummary() {
      Summary = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    public FeedData build() {
      try {
        FeedData record = new FeedData();
        record.RSSFeed = fieldSetFlags()[0] ? this.RSSFeed : (java.lang.String) defaultValue(fields()[0]);
        record.Title = fieldSetFlags()[1] ? this.Title : (java.lang.String) defaultValue(fields()[1]);
        record.ArticleLink = fieldSetFlags()[2] ? this.ArticleLink : (java.lang.String) defaultValue(fields()[2]);
        record.Language = fieldSetFlags()[3] ? this.Language : (java.lang.String) defaultValue(fields()[3]);
        record.Description = fieldSetFlags()[4] ? this.Description : (java.lang.String) defaultValue(fields()[4]);
        record.Author = fieldSetFlags()[5] ? this.Author : (java.lang.String) defaultValue(fields()[5]);
        record.PublishedDate = fieldSetFlags()[6] ? this.PublishedDate : (java.lang.Long) defaultValue(fields()[6]);
        record.UpdatedDate = fieldSetFlags()[7] ? this.UpdatedDate : (java.lang.Long) defaultValue(fields()[7]);
        record.LinkHref = fieldSetFlags()[8] ? this.LinkHref : (java.lang.String) defaultValue(fields()[8]);
        record.LinkTitle = fieldSetFlags()[9] ? this.LinkTitle : (java.lang.String) defaultValue(fields()[9]);
        record.ContentType = fieldSetFlags()[10] ? this.ContentType : (java.lang.String) defaultValue(fields()[10]);
        record.ContentValue = fieldSetFlags()[11] ? this.ContentValue : (java.lang.String) defaultValue(fields()[11]);
        record.Categories = fieldSetFlags()[12] ? this.Categories : (java.lang.String) defaultValue(fields()[12]);
        record.Thumbnail = fieldSetFlags()[13] ? this.Thumbnail : (java.lang.String) defaultValue(fields()[13]);
        record.Summary = fieldSetFlags()[14] ? this.Summary : (java.lang.String) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}